{
  // Use this for work with loacally built Docker Image
  //"image": "zephyr:arm-0.16.8SDK",
  // Use this for download from github the Docker Image
  "image": "ghcr.io/silvio-vallorani-zephyr-portfolio/zephyr_container:arm-0.16.8SDK",
  //"runArgs": ["--privileged"],
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace/app,type=bind",
  "workspaceFolder": "/workspace",
  "postCreateCommand": "west init -l app/ && west update --narrow -o=--depth=1 && west zephyr-export && pip install -r deps/zephyr/scripts/requirements-base.txt",
  "mounts": [
    "source=${localWorkspaceFolder}/.vscode/,target=/workspace/.vscode,type=bind,consistency=cached",
    "source=zephyr-toolchains,target=/opt/toolchains,type=volume,consistency=delegated",
    "source=zephyr-deps,target=/workspace/deps,type=volume,consistency=delegated",
    "source=${localWorkspaceFolder}/build-mcuboot/,target=/workspace/build-mcuboot,type=bind,consistency=delegated",
    "source=${localWorkspaceFolder}/build-slot0/,target=/workspace/build-slot0,type=bind,consistency=delegated",
    "source=${localWorkspaceFolder}/build-slot1/,target=/workspace/build-slot1,type=bind,consistency=delegated"
  ],
  "customizations": {
    "vscode": {
      "settings": {
        // Hush CMake
        "cmake.configureOnOpen": false,
        // IntelliSense
        "C_Cpp.default.compilerPath": "/opt/toolchains/zephyr-sdk-0.16.8/arm-zephyr-eabi/bin/arm-zephyr-eabi-gcc",
        "C_Cpp.default.compileCommands": "/workspace/build-slot0/compile_commands.json",
        // File Associations
        "files.associations": {}
      },
      "extensions": [
        "ms-vscode.cpptools-extension-pack",
        "ms-python.python",
        "ms-vscode.vscode-embedded-tools",
        "ms-vscode.vscode-serial-monitor",
        "ms-vscode.hexeditor",
        "nordic-semiconductor.nrf-kconfig",
        "nordic-semiconductor.nrf-devicetree",
        "redhat.vscode-yaml",
        "lkytal.quicktask",
        "trond-snekvik.gnu-mapfiles",
        "sourcegraph.cody-ai"
      ]
    }
  },
  "portsAttributes": {
    "8666": {
      "label": "CodeChecker Server"
    }
  }
}
